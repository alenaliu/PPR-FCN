name: "VGG_SG_VRD_16_layers"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'im_info'
  top: 'gt_boxes'
  top: 'im_idx'
  python_param {
    module: 'roi_data_layer.layer'
    layer: 'RoIDataLayer'
    param_str: "'num_classes': 101"
  }
}

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}

#========= RPN ============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param{
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}

layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult:0
  }
  param {
      lr_mult: 0
      decay_mult:0
  }
  convolution_param {
    num_output: 60   # 2(bg/fg) *30(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult:0
  }
  param {
    lr_mult: 0
    decay_mult:0
  }
  convolution_param {
    num_output: 120   # 4 * 30(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

layer {
  name: 'rpn-data'
  type: 'Python'
  bottom: 'rpn_cls_score'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data'
  top: 'rpn_labels'
  top: 'rpn_bbox_targets'
  top: 'rpn_bbox_inside_weights'
  top: 'rpn_bbox_outside_weights'
  python_param {
    module: 'rpn.anchor_target_layer'
    layer: 'AnchorTargetLayer'
    param_str: "'feat_stride': 16 \n'scales': !!python/tuple [4, 8, 16, 32, 64,128]"
  }
}
layer {
    name: "rpn_silence"
    type: 'Silence'
    bottom: 'rpn_labels'
    bottom: 'rpn_bbox_targets'
    bottom: 'rpn_bbox_inside_weights'
    bottom: 'rpn_bbox_outside_weights'
}
#========= RoI Proposal ============

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}

layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 60 dim: -1 dim: 0 } }
}

layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rpn_rois'
#  top: 'rpn_scores'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16 \n'scales': !!python/tuple [4, 8, 16, 32, 64,128]"

  }
}

#layer {
#  name: 'debug-data'
#  type: 'Python'
#  bottom: 'data'
#  bottom: 'rpn_rois'
#  bottom: 'rpn_scores'
#  python_param {
#    module: 'rpn.debug_layer'
#    layer: 'RPNDebugLayer'
#  }
#}

layer {
  name: 'roi-data'
  type: 'Python'
  bottom: 'rpn_rois'
  bottom: 'gt_boxes'
  top: 'rois'
  top: 'labels'
  top: 'bbox_targets'
  top: 'bbox_inside_weights'
  top: 'bbox_outside_weights'
  python_param {
    module: 'rpn.proposal_target_layer'
    layer: 'ProposalTargetLayer'
    param_str: "'num_classes': 101"
  }
}

#========= RCNN ============

layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    name : "fc6_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name : "fc6_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    name : "fc7_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    name : "cls_score_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name : "cls_score_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 101
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    name : "bbox_pred_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name : "bbox_pred_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 404
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  propagate_down: 1
  propagate_down: 0
  top: "loss_cls"
  loss_weight: 1
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}
#============Relation module ===========
#============Relation sampler ===========

layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
}
layer {
  name: 'relation_sampler'
  type: 'Python'
  bottom:'rois'
  bottom: 'bbox_pred'
  bottom: 'cls_prob'
  bottom: 'im_info'
  bottom: 'im_idx'
  bottom: 'data'
  top: 's_classeme'
  top: 'o_classeme'
  top: 's_rois'
  top: 'o_rois'
  top: 's_rois_encoded'
  top: 'o_rois_encoded'
  top: 'relation_label'
  python_param {
    module: 'vrd.relation_sampler'
    layer: 'RelationSampler'
  }
}

#============Relation module ===========
#============Subject visual ===========

layer {
  name: "roi_pool5_s_r"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "s_rois"
  top: "pool5_s_r"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
}
layer {
  name: "fc6_s_r"
  type: "InnerProduct"
  bottom: "pool5_s_r"
  top: "fc6_s_r"
  param {
    name : "fc6_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name : "fc6_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6_s_r"
  type: "ReLU"
  bottom: "fc6_s_r"
  top: "fc6_s_r"
}
layer {
  name: "drop6_s_r"
  type: "Dropout"
  bottom: "fc6_s_r"
  top: "fc6_s_r"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_s_r"
  type: "InnerProduct"
  bottom: "fc6_s_r"
  top: "fc7_s_r"
  param {
    name : "fc7_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7_s_r"
  type: "ReLU"
  bottom: "fc7_s_r"
  top: "fc7_s_r"
}
layer {
  name: "drop7_s_r"
  type: "Dropout"
  bottom: "fc7_s_r"
  top: "fc7_s_r"
  dropout_param {
    dropout_ratio: 0.5
  }
}
#============Relation module ===========
#============Object visual ===========

layer {
  name: "roi_pool5_o_r"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "o_rois"
  top: "pool5_o_r"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
}
layer {
  name: "fc6_o_r"
  type: "InnerProduct"
  bottom: "pool5_o_r"
  top: "fc6_o_r"
  param {
    name : "fc6_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name : "fc6_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6_o_r"
  type: "ReLU"
  bottom: "fc6_o_r"
  top: "fc6_o_r"
}
layer {
  name: "drop6_o_r"
  type: "Dropout"
  bottom: "fc6_o_r"
  top: "fc6_o_r"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_o_r"
  type: "InnerProduct"
  bottom: "fc6_o_r"
  top: "fc7_o_r"
  param {
    name : "fc7_w"
    lr_mult: 1
    decay_mult:0
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult:0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7_o_r"
  type: "ReLU"
  bottom: "fc7_o_r"
  top: "fc7_o_r"
}
layer {
  name: "drop7_o_r"
  type: "Dropout"
  bottom: "fc7_o_r"
  top: "fc7_o_r"
  dropout_param {
    dropout_ratio: 0.5
  }
}


#============Relation module composition ===========

layer {
  name: "so_visual"
  bottom: "fc7_s_r"
  bottom: "fc7_o_r"
  top: "so_visual"
  type: "Concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "so_location"
  bottom: "s_rois_encoded"
  bottom: "o_rois_encoded"
  top: "so_location"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: "so_classeme"
  bottom: "s_classeme"
  bottom: "o_classeme"
  top: "so_classeme"
  type: "Concat"
  concat_param {
    axis: 1
  }
}


layer {
  name: "scale_visual"
  type: "Scale"
  bottom: "so_visual"
  top: "scale_visual"
  param {
    lr_mult: 3
  }
  param {
    lr_mult: 6
  }
  scale_param {
    filler {
      value: 0
  }
    bias_term: true
    bias_filler {
      value: 0.5
    }
  }
}

layer {
  name: "scale_classeme"
  type: "Scale"
  bottom: "so_classeme"
  top: "scale_classeme"
  param {
    lr_mult: 3
  }
  param {
    lr_mult: 6
  }
  scale_param {
    filler {
      value:0
  }
    bias_term: true
    bias_filler {
      value: 5
    }
  }
}


layer {
  name: "scale_location"
  type: "Scale"
  bottom: "so_location"
  top: "scale_location"
  param {
    lr_mult: 3
  }
  param {
    lr_mult:6
  }
  scale_param {
    filler {
      value: 0
  }
    bias_term: true
    bias_filler {
      value: 100
    }
  }
}


layer {
  name: "relation_features_so"
  bottom: "scale_visual"
  bottom: "scale_classeme"
  bottom: "scale_location"
  top: "relation_features_so"
  type: "Concat"
  concat_param {
    axis: 1
  }
}


layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "relation_features_so"
  top: "fc"
  param {
    lr_mult: 3
  }
  param {
    lr_mult: 6
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "fc_relu"
  type: "ReLU"
  bottom: "fc"
  top: "fc"
}

layer {
  name: "relation"
  type: "InnerProduct"
  bottom: "fc"
  top: "relation"
  param {
    lr_mult: 3
  }
  param {
    lr_mult: 6
  }
  inner_product_param {
    num_output: 70
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "relation_loss"
  type: "SoftmaxWithLoss"
  bottom: "relation"
  bottom: "relation_label"

  loss_weight:0.00001
  propagate_down: 1  # backprop to prediction
  propagate_down: 0 # don't backprop to labels
  top: "relation_loss"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
