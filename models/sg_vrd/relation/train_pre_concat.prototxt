name: "RelationModel"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'visual'
  top: 'label'
  python_param {
    module: 'vrd.cvpr.vr.layer_pre_concat'
    layer: 'RelationDatalayer'
    param_str: "'batch_size': 100"
  }
}


layer {
  name: "classeme_fc1"
  type: "InnerProduct"
  bottom: "visual"
  top: "classeme_fc1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8192
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "classeme_fc1"
  top: "classeme_fc1"
}

layer {
  name: "classeme_fc2"
  type: "InnerProduct"
  bottom: "classeme_fc1"
  top: "classeme_fc2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "classeme_fc2"
  top: "classeme_fc2"
}

layer {
  name: "relation"
  type: "InnerProduct"
  bottom: "classeme_fc2"
  top: "relation"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 70
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "relation"
  bottom: "label"
  top: "loss"
}

layer {
  name: 'debug-data'
  type: 'Python'
  bottom:'label'
  bottom: 'relation'
  bottom: 'visual'
  python_param {
    module: 'vrd.vr.debug_layer'
    layer: 'ICCVDebugLayer'
  }
}


